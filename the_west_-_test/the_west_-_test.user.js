// ==UserScript==
// @name           The West - Test
// @namespace      Woems
// @include        http://de*.the-west.de*
// ==/UserScript==

/******** BASE FUNCTIONS ********/
function $(ID) {return document.getElementById(ID)}
function $xs(xpath, rootdir) {return document.evaluate(xpath, rootdir || document, null, 9, null).singleNodeValue;}
function $x(p, context) {
  var i, arr = [], xpr = document.evaluate(p, context || document, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);
  for (i = 0; item = xpr.snapshotItem(i); i++) arr.push(item);
  return arr;
}
function loop(xpath, func, rootdir) {
	xpath = document.evaluate(xpath, rootdir || document, null, 6, null);
	var I = xpath.snapshotLength;
	while(--I>=0) func(xpath.snapshotItem(I));
}
function createElement(type, attributes, base){
  var node = document.createElement(type);
  for (var attr in attributes) if (attributes.hasOwnProperty(attr)) node.setAttribute(attr, attributes[attr]);
  if (base) append.appendChild(node);
  return node;
} // Example usage: var styles = createElement('link', {rel: 'stylesheet', type: 'text/css', href: basedir + 'style.css'});
function remove(node) {if(node)node.parentNode.removeChild(node);return remove;}
function Interval(func, interval) { func(); window.setInterval(func,interval); }
function Timer(func, interval) { window.setTimer(func,interval); }
function deserialize(name, def) { return eval(GM_getValue(name, (def || '({})'))); }
function serialize(name, val) { GM_setValue(name, uneval(val)); }

//var GM_log = function (){};
if(unsafeWindow.console){ var GM_log = unsafeWindow.console.log; }
var log = (unsafeWindow.console) ? unsafeWindow.console.log : GM_log;
/********************************/

//Interval(function () {
  GM_log(debugArray(unsafeWindow.Character));
  //GM_log(uneval(unsafeWindow.Character));
//},50000);

function debugArray(array,tiefe)
{
  //if (!ausgabefunc) ausgabefunc=GM_log;
  if (!tiefe) tiefe=0;
  var ausgabe="";
  var tiefetext=""; for (var i=0; i<tiefe; i++) tiefetext=tiefetext+"#"
  for (val in array)
    switch (typeof(array[val]))
    {
      case "function":
        //ausgabe=ausgabe+tiefetext+val+" ("+typeof(array[val])+"): <wird nicht angezeigt>\n";
        break;
      case "object":
        ausgabe=ausgabe+tiefetext+val+" ("+typeof(array[val])+"):\n"+debugArray(array[val],tiefe+1);
        break;
      case "number":
      default: ausgabe=ausgabe+tiefetext+val+" ("+typeof(array[val])+"): "+array[val]+"\n";
    }
  //if (ausgabefunc) ausgabefunc(ausgabe);
  return ausgabe;
}
/*

Woems/The West - Test: ({barwidth:84, barPopups:{health:{popup_delay:100, styles:{}, xhtml:"<b>Lebenspunkte</b>", is_enabled:true, cur_x:0, cur_y:0, enableBg:true, handlers:{over:(function (E) {var C;if (A.event) {E = E || window.event;C = [(A.event === true) ? E : new (A.event)(E)];if (A.arguments) {C.extend(A.arguments);}} else {C = A.arguments || arguments;}var F = function () {return B.apply($pick(A.bind, B), C);};if (A.delay) {return setTimeout(F, A.delay);}if (A.periodical) {return setInterval(F, A.periodical);}if (A.attempt) {try {return F();} catch (D) {return false;}}return F();}), move:(function (E) {var C;if (A.event) {E = E || window.event;C = [(A.event === true) ? E : new (A.event)(E)];if (A.arguments) {C.extend(A.arguments);}} else {C = A.arguments || arguments;}var F = function () {return B.apply($pick(A.bind, B), C);};if (A.delay) {return setTimeout(F, A.delay);}if (A.periodical) {return setInterval(F, A.periodical);}if (A.attempt) {try {return F();} catch (D) {return false;}}return F();}), out:(function (E) {var C;if (A.event) {E = E || window.event;C = [(A.event === true) ? E : new (A.event)(E)];if (A.arguments) {C.extend(A.arguments);}} else {C = A.arguments || arguments;}var F = function () {return B.apply($pick(A.bind, B), C);};if (A.delay) {return setTimeout(F, A.delay);}if (A.periodical) {return setInterval(F, A.periodical);}if (A.attempt) {try {return F();} catch (D) {return false;}}return F();})}}, energy:{popup_delay:100, styles:{}, xhtml:"<b>Erholung</b>", is_enabled:true, cur_x:0, cur_y:0, enableBg:true, handlers:{over:(function (E) {var C;if (A.event) {E = E || window.event;C = [(A.event === true) ? E : new (A.event)(E)];if (A.arguments) {C.extend(A.arguments);}} else {C = A.arguments || arguments;}var F = function () {return B.apply($pick(A.bind, B), C);};if (A.delay) {return setTimeout(F, A.delay);}if (A.periodical) {return setInterval(F, A.periodical);}if (A.attempt) {try {return F();} catch (D) {return false;}}return F();}), move:(function (E) {var C;if (A.event) {E = E || window.event;C = [(A.event === true) ? E : new (A.event)(E)];if (A.arguments) {C.extend(A.arguments);}} else {C = A.arguments || arguments;}var F = function () {return B.apply($pick(A.bind, B), C);};if (A.delay) {return setTimeout(F, A.delay);}if (A.periodical) {return setInterval(F, A.periodical);}if (A.attempt) {try {return F();} catch (D) {return false;}}return F();}), out:(function (E) {var C;if (A.event) {E = E || window.event;C = [(A.event === true) ? E : new (A.event)(E)];if (A.arguments) {C.extend(A.arguments);}} else {C = A.arguments || arguments;}var F = function () {return B.apply($pick(A.bind, B), C);};if (A.delay) {return setTimeout(F, A.delay);}if (A.periodical) {return setInterval(F, A.periodical);}if (A.attempt) {try {return F();} catch (D) {return false;}}return F();})}}, experience:{popup_delay:100, styles:{}, xhtml:"<b>Erfahrung</b>", is_enabled:true, cur_x:0, cur_y:0, enableBg:true, handlers:{over:(function (E) {var C;if (A.event) {E = E || window.event;C = [(A.event === true) ? E : new (A.event)(E)];if (A.arguments) {C.extend(A.arguments);}} else {C = A.arguments || arguments;}var F = function () {return B.apply($pick(A.bind, B), C);};if (A.delay) {return setTimeout(F, A.delay);}if (A.periodical) {return setInterval(F, A.periodical);}if (A.attempt) {try {return F();} catch (D) {return false;}}return F();}), move:(function (E) {var C;if (A.event) {E = E || window.event;C = [(A.event === true) ? E : new (A.event)(E)];if (A.arguments) {C.extend(A.arguments);}} else {C = A.arguments || arguments;}var F = function () {return B.apply($pick(A.bind, B), C);};if (A.delay) {return setTimeout(F, A.delay);}if (A.periodical) {return setInterval(F, A.periodical);}if (A.attempt) {try {return F();} catch (D) {return false;}}return F();}), out:(function (E) {var C;if (A.event) {E = E || window.event;C = [(A.event === true) ? E : new (A.event)(E)];if (A.arguments) {C.extend(A.arguments);}} else {C = A.arguments || arguments;}var F = function () {return B.apply($pick(A.bind, B), C);};if (A.delay) {return setTimeout(F, A.delay);}if (A.periodical) {return setInterval(F, A.periodical);}if (A.attempt) {try {return F();} catch (D) {return false;}}return F();})}}}, health:272, energy:32, lifePointPerHealthSkill:10, lifePointPerHealthSkillBonus:0, healthRegen:0.02, energyRegen:0.03, health_date:(new Date(1259229251755)), energy_date:(new Date(1259229251754)), experience:1124, level:13, attributes:{strength:6, flexibility:3, dexterity:2, charisma:2}, skills:{build:18, punch:6, tough:6, endurance:6, health:6, ride:6, reflex:3, dodge:3, hide:3, swim:6, aim:5, shot:2, pitfall:2, finger_dexterity:5, repair:3, leadership:2, tactic:2, trade:5, animal:14, appearance:2}, skill_names:{strength:["build", "punch", "tough", "endurance", "health"], flexibility:["ride", "reflex", "dodge", "hide", "swim"], dexterity:["aim", "shot", "pitfall", "finger_dexterity", "repair"], charisma:["leadership", "tactic", "trade", "animal", "appearance"]}, skill_bonus:{}, attribute_bonus:{}, skill_titles:{build:"Errichten", punch:"Schlagkraft", tough:"Z\xE4higkeit", endurance:"Ausdauer", health:"Lebenspunkte", ride:"Reiten", reflex:"Reflex", dodge:"Ausweichen", hide:"Verstecken", swim:"Schwimmen", aim:"Zielen", shot:"Schie\xDFen", pitfall:"Fallen stellen", finger_dexterity:"Fingerfertigkeit", repair:"Reparieren", leadership:"Leiten", tactic:"Taktik", trade:"Handeln", animal:"Mit Tieren umgehen", appearance:"Auftreten"}, attribute_titles:{strength:"St\xE4rke", flexibility:"Beweglichkeit", dexterity:"Geschicklichkeit", charisma:"Charisma"}, itemLevelRequirementDecrease:{all:0, right_arm:0, left_arm:0, body:0, head:0, foot:0, animal:0, neck:0, yield:0, copy:(function (D, C) {D = D || 0;if (D < 0) {D = this.length + D;}C = C || this.length - D;var A = [];for (var B = 0; B < C; B++) {A[B] = this[D++];}return A;}), remove:(function (C) {var B = 0;var A = this.length;while (B < A) {if (this[B] === C) {this.splice(B, 1);A--;} else {B++;}}return this;}), contains:#1=(function (A, B) {return this.indexOf(A, B) != -1;}), associate:(function (C) {var D = {}, B = Math.min(this.length, C.length);for (var A = 0; A < B; A++) {D[C[A]] = this[A];}return D;}), extend:(function (C) {for (var B = 0, A = C.length; B < A; B++) {this.push(C[B]);}return this;}), merge:(function (C) {for (var B = 0, A = C.length; B < A; B++) {this.include(C[B]);}return this;}), include:(function (A) {if (!this.contains(A)) {this.push(A);}return this;}), getRandom:(function () {return this[$random(0, this.length - 1)] || null;}), getLast:(function () {return this[this.length - 1] || null;}), each:function forEach() {[native code]}, test:#1#, rgbToHex:(function (D) {if (this.length < 3) {return false;}if (this.length == 4 && this[3] == 0 && !D) {return "transparent";}var B = [];for (var A = 0; A < 3; A++) {var C = (this[A] - 0).toString(16);B.push((C.length == 1) ? "0" + C : C);}return D ? B : "#" + B.join("");}), hexToRgb:(function (C) {if (this.length != 3) {return false;}var A = [];for (var B = 0; B < 3; B++) {A.push(parseInt((this[B].length == 1) ? this[B] + this[B] : this[B], 16));}return C ? A : "rgb(" + A.join(",") + ")";}), isIn:(function (obj) {for (var i = 0; i < this.length; i++) {if (obj == this[i]) {return true;}}return false;}), getByXy:(function (x, y) {if (this[x] === undefined || this[x][y] === undefined) {return undefined;}return this[x][y];}), setByXy:(function (x, y, value) {if (this[x] === undefined) {this[x] = [];}this[x][y] = value;}), rar:(function (index) {var retval = this[index];this.splice(index, 1);})}, taskPointModifier:{job:1, build:1}, home_town:{x:15, y:211, town_id:2642}, town_rights:1, deposit:0, money:605, default_speed:0.5, speed:0.5, characterSex:"female", characterClass:"adventurer", set_town_rights:(function (rights) {this.town_rights = rights;}), set_home_town:(function (x, y, town_id) {this.home_town = (town_id === undefined) ? null : {x: x, y: y, town_id: town_id};WEvent.trigger("home_town_changed", []);}), get_home_town:(function () {return this.home_town;}), set_avatar:(function (avatar) {$E("#avatar img").setProperty("src", avatar.small);}), get_skills:(function () {return this.skills;}), set_skills:(function (skills) {this.skills = skills;}), set_speed:(function (speed) {this.speed = speed;WEvent.trigger("character_speed_changed", []);}), set_character_sex:(function (sex) {this.characterSex = sex;}), set_character_class:(function (cClass) {this.characterClass = cClass;}), calc_width:(function (value, value_max) {if (value == value_max) {return this.barwidth;}return (value / value_max) * this.barwidth;}), get_max_health:(function () {return 100 + (this.level - 1) * this.lifePointPerHealthSkill + (this.skills.health + (this.bonus.skills_total.health != undefined ? this.bonus.skills_total.health : 0)) * (this.lifePointPerHealthSkill + this.lifePointPerHealthSkillBonus);}), get_health:(function () {this.health = Math.min(this.health, this.get_max_health());return this.health;}), set_health:(function (health) {this.health = Math.min(health, this.get_max_health());this.health_date = new Date;this.redraw_health();}), redraw_health:(function () {var ht = $("health_text");ht.setStyles({'text-align': "center", color: "#FFFFFF", 'font-weight': "bold"});ht.innerHTML = Math.round(this.get_health()) + " / " + this.get_max_health();$("health_filler").setStyle("width", this.calc_width(this.get_health(), this.get_max_health()));WEvent.trigger("health", [this.get_health(), this.get_max_health()]);if (this.barPopups.health === null) {this.barPopups.health = new MousePopup("", 250, {opacity: 0.9});$("health_bar").addMousePopup(this.barPopups.health);}this.barPopups.health.setXHTML("<b>Lebenspunkte</b>");}), mod_health:(function (mod_health) {var cur_health = this.get_health() + mod_health;if (cur_health > this.get_max_health()) {cur_health = this.get_max_health();} else if (cur_health < 0) {cur_health = 0;}this.set_health(cur_health);}), set_max_energy:(function (max_energy) {this.max_energy = max_energy;}), set_energy:(function (energy) {this.energy = energy;this.energy_date = new Date;this.redraw_energy();}), redraw_energy:(function () {if (PremiumBoni.hasBonus("regen")) {$("energy_filler").setStyle("backgroundImage", "url(images/character_bars/filler_bonus.png)");$("energy_bar").setStyle("backgroundImage", "url(../images/character_bars/bars_bonus.png)");}var et = $("energy_text");et.setStyles({'text-align': "center", color: "#FFFFFF", 'font-weight': "bold"});et.innerHTML = Math.floor(this.energy) + " / " + this.max_energy;$("energy_filler").setStyle("width", this.calc_width(this.energy, this.max_energy));WEvent.trigger("energy", [this.energy, this.max_energy]);if (this.barPopups.energy === null) {this.barPopups.energy = new MousePopup("", 250, {opacity: 0.9});$("energy_bar").addMousePopup(this.barPopups.energy);}this.barPopups.energy.setXHTML("<b>Erholung</b>");}), mod_energy:(function (mod_energy) {this.set_energy(this.energy + mod_energy);}), set_max_experience:(function (max_experience) {this.max_experience = max_experience;}), set_min_experience:(function (min_experience) {this.min_experience = min_experience;}), set_experience:(function (experience) {this.experience = experience;this.redraw_experience();}), redraw_experience:(function () {var et = $("experience_text");et.setStyle("color", "#FFFFFF");et.innerHTML = (this.experience - this.min_experience) + " / " + (this.max_experience - this.min_experience);$("experience_filler").setStyle("width", this.calc_width(this.experience - this.min_experience, this.max_experience - this.min_experience));WEvent.trigger("experience", [this.experience - this.min_experience, this.max_experience - this.min_experience]);if (this.barPopups.experience === null) {this.barPopups.experience = new MousePopup("", 250, {opacity: 0.9});$("experience_bar").addMousePopup(this.barPopups.experience);}this.barPopups.experience.setXHTML("<b>Erfahrung</b>");}), redraw_level_box:(function () {$("level_box").innerHTML = this.level;}), start_ticker_energy:(function () {(function () {var now = new Date;var diff = (now.getTime() - this.energy_date.getTime()) / 1000;var energy = Math.floor(this.energy + this.max_energy * this.energyRegen * diff / 3600);if (energy > this.max_energy) {energy = this.max_energy;}if (energy != this.energy) {this.set_energy(energy);}}.periodical(2000, this));}), start_ticker_health:(function () {(function () {var now = new Date;var diff = (now.getTime() - this.health_date.getTime()) / 1000;var health = Math.floor(this.get_health() + this.get_max_health() * this.healthRegen * diff / 3600);if (health > this.get_max_health()) {health = this.get_max_health();}if (health != this.get_health()) {this.set_health(health);}}.periodical(2000, this));}), set_money:(function (money) {this.money = money;$("cash").innerHTML = money;WEvent.trigger("money", [money]);}), set_deposit:(function (deposit) {this.deposit = deposit;$("deposit").innerHTML = deposit;}), set_level:(function (level) {var old_level = this.level;this.level = level;if (old_level) {this.redraw_experience();this.redraw_health();}WEvent.trigger("level", [level]);}), set_position:(function (x, y) {var old_pos = {x: pos.x, y: pos.y};pos.x = x;pos.y = y;var old_tile = WMap.$(old_pos.x, old_pos.y, true);if (old_tile) {WMap.updateTile(old_tile, old_pos.x, old_pos.y);}var tile = WMap.$(x, y, true);if (tile) {WMap.updateTile(tile, x, y);}WEvent.trigger("position_change", [x, y]);}), recalc_skill_attr:(function () {this.bonus_skills = {};this.bonus.skills_total = {};for (var attr in this.attributes) {for (var i = 0, len = this.skill_names[attr].length; i < len; ++i) {var skill = this.skill_names[attr][i];var bonus = 0;if (this.bonus.attributes[attr] !== undefined) {bonus += this.bonus.attributes[attr];}if (this.bonus.skills[skill] !== undefined) {bonus += this.bonus.skills[skill];}this.bonus_skills[skill] = this.skills[skill] + bonus;this.bonus.skills_total[skill] = bonus;}}}), set_status:(function (task) {if (!task) {TitleTicker.setTime(0);$("current_task").setStyle("background-image", "url(images/tasks/" + this.characterSex + "_idle.gif)");$("task_time").setStyle("display", "none");$("current_task").innerHTML = "Du machst gerade nichts.";return;}var taskCoordLink = "<a href=\"javascript:WMap.scroll_map_to_char()\">" + task.data_obj.title + "</a>";var taskWay = null;if (Tasks != undefined && Tasks.tasks != undefined && Tasks.tasks[0] != undefined) {taskWay = Tasks.tasks[0];if (taskWay.data_obj.to_x != undefined && taskWay.data_obj.to_y != undefined) {taskCoordLink = "<a href=\"javascript:WMap.scroll_map_to_pos(parseInt(" + taskWay.data_obj.to_x + "),parseInt(" + taskWay.data_obj.to_y + "))\">" + task.data_obj.title + "</a>";}}$("task_time").setStyle("display", "block");var desc;switch (task.type) {case "job":desc = "Arbeit: %1.".replace("%1", taskCoordLink);break;case "duel":if (task.data_obj.isNPC != true) {var duelPartnerLink = "<a href=\"javascript:AjaxWindow.show('profile',{char_id:" + task.data_obj.duel_partner + "});\">" + task.data_obj.title + "</a>";} else {var duelPartnerLink = task.data_obj.title;}desc = "Duell: %1.".replace("%1", duelPartnerLink);break;case "fortsleep":case "sleep":desc = "Du schl\xE4fst gerade.";break;case "pray":desc = "Du betest gerade.";break;case "found":desc = "Du gr\xFCndest eine Stadt.";break;case "fortfound":var fortTypeName = null;switch (task.data_obj.fortType) {case 0:fortTypeName = "Kleines Fort";break;case 1:fortTypeName = "Mittleres Fort";break;case 2:fortTypeName = "Gro\xDFes Fort";break;default:;}desc = "Du errichtest ein %1.".replace("%1", fortTypeName);break;case "refound":desc = "Du besetzt eine Geisterstadt.";break;case "build":var buildWindow = "<a href=\"javascript:AjaxWindow.show('cityhall_build', {'building':'" + task.data_obj.building_key + "'}, '" + task.data_obj.building_key + "');\">" + task.data_obj.title + "</a>";desc = "Stadt ausbauen: %1.".replace("%1", buildWindow);break;case "fortbuild":var fortBuildWindow = "<a href=\"javascript:AjaxWindow.show('headquarter_build', {'fortbuilding':'" + task.data_obj.buildingKey + "', 'fort_id':" + task.data_obj.fortId + "}, '" + task.data_obj.buildingKey + "');\">" + task.data_obj.title + "</a>";desc = "Fort ausbauen: %1.".replace("%1", fortBuildWindow);break;case "walk":desc = "Du gehst gerade: %1.".replace("%1", taskCoordLink);break;case "way":desc = "Du gehst gerade.";break;default:desc = task.type;break;}$("current_task").setStyle("background-image", "url(images/tasks/" + this.characterSex + "_" + task.type + ".gif)");$("current_task").innerHTML = desc;TitleTicker.setTime(Math.round(task.date_done.valueOf().toString().substr(0, 10)) - $time().toString().substr(0, 10));}), name:"Woems", playerId:"649273", healthDate:(new Date(1259222559000)), energyDate:(new Date(1259222876000)), sessionId:"217b75e39a5cd09a", attribute_points:0, skill_points:0, bonus:{attributes:{repair:4, pitfall:3, animal:5, tough:5, swim:0, build:0, leadership:4, tactic:2}, skills:{pitfall:3, tactic:2, repair:4, leadership:4, tough:5, animal:5}, skills_total:{build:0, punch:0, tough:5, endurance:0, health:0, ride:0, reflex:0, dodge:0, hide:0, swim:0, aim:0, shot:0, pitfall:3, finger_dexterity:0, repair:4, leadership:4, tactic:2, trade:0, animal:5, appearance:0}}, min_experience:938, max_experience:1144, max_energy:100, bonus_skills:{build:18, punch:6, tough:11, endurance:6, health:6, ride:6, reflex:3, dodge:3, hide:3, swim:6, aim:5, shot:2, pitfall:5, finger_dexterity:5, repair:7, leadership:6, tactic:4, trade:5, animal:19, appearance:2}})

*/
